# For most projects, this workflow file will not need changing; you simply need to commit it to your repository.
# You may wish to alter this file to override the set of languages analyzed, or to provide custom queries or build logic.
name: "CodeQL"

on:
  workflow_dispatch:
  push:
    branches: [master]
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
  #pull_request:
    # The branches below must be a subset of the branches above
    # branches: [master]
  # schedule:
    # - cron: '0 8 * * *'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read

    strategy:
      fail-fast: false
      matrix:
        # Override automatic language detection by changing the below list
        # Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']
        language: ['python']
        # Learn more...
        # https://docs.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#overriding-automatic-language-detection

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        # We must fetch at least the immediate parents so that if this is a pull request then we can checkout the head.
        fetch-depth: 2

    # If this run was triggered by a pull request event, then checkout the head of the pull request instead of the merge commit.
    # seems to no longer be necessary
    # - run: git checkout HEAD^2
    #  if: ${{ github.event_name == 'pull_request' }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install external dependencies with apt-get
      run: |
        sudo apt-get update -y
        DEBIAN_FRONTEND=noninteractive sudo apt-get install -y \
          g++ \
          git \
          cmake \
          uuid-dev \
          dpkg-dev \
          libcppunit-dev \
          libgtest-dev \
          libssl-dev \
          libx11-dev \
          python3 \
          python3-pip \
          python3-venv \
          python3-dev
        sudo apt-get autoclean -y

    - name: Install python base packages
      run: python3 -m pip install --no-cache-dir --upgrade pip==23.0.1 setuptools==65.5.1 wheel

    - name: Install alienpy dependencies
      run: | # |
          # grep -v xrootd requirements.txt > requirements_noxrd.txt
          python3 -m pip install --no-cache-dir --upgrade -r requirements.txt;
          # Set the CODEQL-PYTHON environment variable to the Python executable that includes the dependencies
          echo "CODEQL_PYTHON=$(which python3)" >> $GITHUB_ENV

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: python
        # Override the default behavior so that the action doesn't attempt to auto-install Python dependencies
        setup-python-dependencies: false

        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file. 
        # Prefix the list here with "+" to use these queries and those in the config file.
        # queries: ./path/to/local/query, your-org/your-repo/queries@main

    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    # - name: Autobuild
    #  uses: github/codeql-action/autobuild@v1

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö https://git.io/JvXDl

    # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
    #    and modify them (or add more) to build your code if your project
    #    uses a compiled language

    #- run: |
    #   make bootstrap
    #   make release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
